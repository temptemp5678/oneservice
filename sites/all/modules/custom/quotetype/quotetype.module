<?php
/**
 * @file
 *
 */

/**
 * Implements hook_init()
 */
function quotetype_init() {
  // add ajax function for form page.
  module_load_include('inc', 'quotetype', 'quotetype_page_form_ajax');
  module_load_include('inc', 'quotetype', 'quotetype_ajax_stamp_block_form');
  module_load_include('inc', 'quotetype', 'quotetype_ajax_input_tableselect');
}

/**
 * Implements hook_block_info().
 */
function quotetype_block_info() {
  $blocks = array();
  $blocks['quotetype_ajax_stamp'] = array(
    'info' => t('quotetype AJAX Stamp Block'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function quotetype_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'quotetype_ajax_stamp':
      // $block['subject'] = 'AJAX Stamp for Quote';
      $block['content'] = drupal_get_form('quotetype_ajax_stamp_block_form');
      break;
  }
  return $block;
}

/**
 * Implements hook_menu()
 */
function quotetype_menu() {
  $items = array();
  $items['add_new_quotation'] = array(
    'title' => 'Create New Quotation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quotetype_add_quote_form'),
    'access arguments' => array('permission for editor role'),
    'type' => MENU_CALLBACK,
    'file' => 'quotetype_page_form.inc',
  );
  // add "Authorize" tab on Quote node page
  $items['node/%/authorize'] = array(
    'title' => t('Authorize'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quotetype_authorize_tab_form', 1),
    'access callback' => 'permission for moderator role',
    'type' => MENU_LOCAL_TASK,
    'file' => 'quotetype_authorize_tab_form.page.inc',
  );
  // add "Delete" tab on Quote node page
  $items['node/%/remove'] = array(
    'title' => t('Delete'),
    'page callback' => 'quotetype_delete_tab_page',
    'page arguments' => array(1),
    'access callback' => 'permission for siteadmin role',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * callback from quotetype_ajax_stamp_block_form()
 */
function quotetype_delete_tab_page($nid) {
  if ($nid) {
    drupal_goto('node/' . $nid . '/delete');
  }
  return t('Access denied from Quote Tab');
}

/**
 * hook_node_delete()
 */
function quotetype_node_delete($node) {
  if ($node->type == 'quote') {
    if (isset($node->field_quote_repair_nid['und'][0]['value'])) {
      foreach ($node->field_quote_repair_nid['und'] as $row) {
        // update field for Repair node
        $repair_nid = $row['value'];
        if ($repair_nid > 0) {
          $repair_node = node_load($repair_nid, NULL, TRUE);
          if (isset($repair_node) && ($repair_node->type == 'repair')) {
            $field_language = field_language('node', $repair_node, 'field_repair_quote_status');
            // update "Quote Status Field of Repair Node" as "No" of value,
            $repair_node->field_repair_quote_status[$field_language][0]['value'] = 0;
            field_attach_presave('node', $repair_node);
            field_attach_update('node', $repair_node);
            watchdog('quotetype', 'Update Repair node - @nid - Quote Status as "No"', array('@nid' => $repair_node->nid,));
          }
        }
      }
    }
  }
}

/**
 * hook_form_alter()
 * hide title field, and assign a default title
 */
function quotetype_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'quote_node_form') {
    // adjust node title
    // @see hook_node_presave() on repairtype.module
    $form['title']['#default_value'] = t('报价');
  }
}

/**
 * @return
 * Authorize Stamp image
 * @parameter 1 is width of image size, default is 128px
 * @parameter 2 is height of image size, default is 128px
 */
function quotetype_authorize_stamp_image($width = '128px', $height = '128px') {
  $stamp_image_path = '/' . drupal_get_path('module', 'quotetype') . '/images/wanbo_quote_stamp.png';
  $stamp_image_variables = array(
                            'path' => $stamp_image_path,
                            'alt' => 'Stamp',
                            'title' => 'Stamp',
                            'width' => $width,
                            'height' => $height,
                           );
  $stamp_image = theme('image', $stamp_image_variables);
  return $stamp_image;
}

/*
 * Implementation of hook_node_update()
 */

/*
 * Implementation of hook_node_delete()
 */