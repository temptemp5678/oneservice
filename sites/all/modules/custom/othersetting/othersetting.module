<?php
/**
 * @file
 *
 */
 
/**
 * Implementation of hook_permission()
 */
function othersetting_permission() {
  return array(
     'view site publish content' => array(
      'title' => t('View Site Publish Content'),
      'description' => t('Login User can view Site Content'),
    ),
     'view site internal content' => array(
      'title' => t('View Site Internal Content'),
      'description' => t('Only internal company user can view content'),
    ),
     'view my repair link' => array(
      'title' => t('View My Repair Link'),
      'description' => t('Only Key Client can view this link'),
    ),
     'roles option for add user' => array(
      'title' => t('Roles Option For Add User'),
      'description' => t('Allowed User Roles to be selected on Add new user form page'),
    ),
  );
}

/**
 * Implements hook_menu()
 */
function othersetting_menu() {
  $items = array();
  $items['my-repair'] = array(
    'title' => 'My Repair',
    'page callback' => 'othersetting_my_repair_page_callback',
    'access arguments' => array('view my repair link'),
    'type' => MENU_CALLBACK,
    'file' => 'othersetting_home_page_callback_page.inc',
  );
  $items['othersetting/set-quote-value'] = array(
    'title' => 'Quote Default Value',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('othersetting_set_quote_value_form'),
    'access arguments' => array('view site internal content'),
    'type' => MENU_CALLBACK,
    'file' => 'othersetting_set_quote_value_form_page.inc',
  );
  $items['othersetting/add-company-info'] = array(
    'title' => 'Add Company Info',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('othersetting_add_company_form'),
    'access arguments' => array('view site internal content'),
    'type' => MENU_CALLBACK,
    'file' => 'othersetting_add_company_form_page.inc',
  );
  $items['user/login-link'] = array(
    'title' => 'Log in',
    'page callback' => 'othersetting_user_login_link',
    'access callback' => 'user_is_anonymous',
    'file' => 'othersetting_user_login_link_page.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * @return
 * default Quotation page text content
 */
function othersetting_quote_page_content($node = NULL) {
  $device_name = '';
  // isset($node) is for node page
  if (isset($node)){
    // for Company Name
    $term = taxonomy_term_load($node->field_quote_company_name['und'][0]['tid']);
    
    // for each device
    foreach ($node->field_quote_repair_nid['und'] as $key => $row) {
      if (!empty($row['value'])){
        $repair_node = node_load($row['value']);
        if (isset($repair_node)){
        $device_term = taxonomy_term_load($repair_node->field_repair_device_type['und'][0]['tid']);
        $device_name .= $device_term->name . '<br />';
        }
      }
    }
  }
  else {
    // load default value when create a new quotation
    $tid = variable_get('quote_default_value_company_name');
    if (is_numeric($tid)) {
      if (taxonomy_term_load($tid)) {
        $term = taxonomy_term_load($tid);
      }
    }
  }
  // $device_content = $node->field_quote_repair_nid['und'][0]['value'];

  $output = '';
  $output =  t('产品保修期外维修单') . '<br />'
               . t('贵公司送修的解码器')
               . t('型号') . '：' . '<br />'
               . '<p><span class="quotation_insert_markup_device_type">'
               . ((isset($node)) ? $device_name : '')
               . '</span></p>'
               . t('已经超过保修期, 需要更换配件, 维修后仅对该设备配件将提供为期')
               . '<span class="quotation_insert_markup_warranty_day">'
               . ((isset($node)) ? $node->field_quote_warranty_day['und'][0]['value'] : variable_get('quote_default_value_warranty_day'))
               . '</span>'
               . t('天的保修服务。')
               . '<br />'
               . t('维修情况如下：')
               . '<div class="col-xs-11 quote-row-output-html color-449bb5">'
               . ((isset($node)) ? quote_row_output_table($node) : '')
               . '</div>'
               . '<div class="clear-both"></div>'
               . t('因已经超过保修期，需要支付维修费.费用为') . '￥'
               . '<span class="quotation-insert-markup-sum-price">'
               . ((isset($node)) ? $node->field_quote_sum_price['und'][0]['value'] : '')
               . '</span>'
               . '(' . t('人民币')
               . '<span class="quotation-insert-markup-chinese-price">'
               . ((isset($node)) ? num2rmb($node->field_quote_sum_price['und'][0]['value']) : '')
               . '</span>'
               . t('元整') . ').' . t('维修后该设备相同部件将提供为期')
               . '<span class="quotation_insert_markup_warranty_day">'
               . ((isset($node)) ? $node->field_quote_warranty_day['und'][0]['value'] : variable_get('quote_default_value_warranty_day'))
               . '</span>'
               . t('天的保修服务.')
               . '<br />'
               . '<div class="clear-both"></div>'
               . t('以下是我司有关汇款信息：') . '<br /><br />'
               . t('名称') . '： '
               . '<span class="quotation_insert_markup_company_name">'
               . ((isset($term)) ? $term->name : '')
               . '</span>'
               . '<br />'
               . t('开户行') . '： '
               . '<span class="quotation_insert_markup_bank_name">'
               . ((isset($term)) ? $term->field_company_bank_name['und'][0]['safe_value'] : '')
               . '</span>'
               . '<br />'
               . t('帐号') . '： '
               . '<span class="quotation_insert_markup_account_number">'
               . ((isset($term)) ? $term->field_company_account_number['und'][0]['safe_value'] : '')
               . '</span>'
               . '<br /><br />'
               . t('收到维修费后') . '，'
               . '<span class="quotation_insert_markup_company_name">'
               . ((isset($term)) ? $term->name : '')
               . '</span>'
               . t('负责开具发票，并将设备快递回贵公司。') . '<br />'
               . t('李靖') . '<br />'
               . '<span class="quotation_insert_markup_create_date">'
               . ((isset($node)) ? date('Y-m-d', $node->field_quote_create_date['und'][0]['value']) : date('Y-m-d'))
               . '</span>';

  return $output;
}

/**
 * output quotatino table
 */
function quote_row_output_table($node = NULL) {
  $output = '';
  if (!isset($node)) {
    return $output;
  }
  
  $output .= '<table class="table table-striped">';
    $output .= '<thead>';
      $output .= '<tr>';
        $output .= '<th>#</th>';
        $output .= '<th>' . t('型号') . '</th>';
        $output .= '<th>' . t('价格') . '</th>';
      $output .= '</tr>';
    $output .= '</thead>';
    $output .= '<tbody>';
  
  // $node is current Quote Node Object 
  // $node->field_quote_repair_nid['und'] is array, it could have multiple repair NID
  if (isset($node->field_quote_repair_nid['und'][0])) {
    foreach ($node->field_quote_repair_nid['und'] as $row) {
      $reapir_node_array[] = $row['value'];
    }
    $nodes = node_load_multiple($reapir_node_array);
    $index = 1;
    foreach($nodes as $reapir_node) {
      if (isset($reapir_node->field_repair_device_type['und'][0]['tid'])) {
        $device_type_value = field_get_items('node', $reapir_node, 'field_repair_device_type');  
        $device_type_label = field_view_value('node', $reapir_node, 'field_repair_device_type', $device_type_value[0]);
      }
      $output .= '<tr><td>' . $index . '</td><td>' . $device_type_label['#title'] . '</td><td>' . $reapir_node->field_repair_quote_amount['und'][0]['value'] . '</td></tr>';
      $sum[] = $reapir_node->field_repair_quote_amount['und'][0]['value'];
      $index++;
    }
    $client_name_id = field_get_items('node', $reapir_node, 'field_repair_client_name'); 
    $client_name_label = field_view_value('node', $reapir_node, 'field_repair_client_name', $client_name_id[0]);
    $sumRepairAmount = number_format(array_sum($sum), 2, '.', '');
    $dicount_amount = number_format(($node->field_quote_sum_price['und'][0]['value'] - $sumRepairAmount), 2, '.', '');
    $output .= '<tr><td></td><td>' .  t('折扣') . '</td><td class="quotation-js-insert-final-discount">' . $dicount_amount . '</td></tr>';
    $output .= '<tr><td></td><td>' . t('总价') . '</td><td class="quotation-insert-markup-sum-price">' . $node->field_quote_sum_price['und'][0]['value'] . '</td></tr>';
  }
      $output .= '</tbody>';
  $output .= '</table>';
  return $output;
}
/**
 * 人民币小写转大写
 *
 * @param string $number 数值
 * @param string $int_unit 币种单位，默认"元"，有的需求可能为"圆"
 * @param bool $is_round 是否对小数进行四舍五入
 * @param bool $is_extra_zero 是否对整数部分以0结尾，小数存在的数字附加0,比如1960.30，
 *             有的系统要求输出"壹仟玖佰陆拾元零叁角"，实际上"壹仟玖佰陆拾元叁角"也是对的
 * @return string
 * http://ustb80.blog.51cto.com/6139482/1035327
 */
function num2rmb($number = 0, $int_unit = '元', $is_round = TRUE, $is_extra_zero = FALSE) {
  // 将数字切分成两段
  $parts = explode('.', $number, 2);
  $int = isset($parts[0]) ? strval($parts[0]) : '0';
  $dec = isset($parts[1]) ? strval($parts[1]) : '';

  // 如果小数点后多于2位，不四舍五入就直接截，否则就处理
  $dec_len = strlen($dec);
  if (isset($parts[1]) && $dec_len > 2) {
    $dec = $is_round
            ? substr(strrchr(strval(round(floatval("0.".$dec), 2)), '.'), 1)
            : substr($parts[1], 0, 2);
  }

  // 当number为0.001时，小数点后的金额为0元
  if(empty($int) && empty($dec)) {
    return '零';
  }

  // 定义
  $chs = array('0','壹','贰','叁','肆','伍','陆','柒','捌','玖');
  $uni = array('','拾','佰','仟');
  $dec_uni = array('角', '分');
  $exp = array('', '万');
  $res = '';

  // 整数部分从右向左找
  for($i = strlen($int) - 1, $k = 0; $i >= 0; $k++) {
    $str = '';
    // 按照中文读写习惯，每4个字为一段进行转化，i一直在减
    for($j = 0; $j < 4 && $i >= 0; $j++, $i--)
    {
        $u = $int{$i} > 0 ? $uni[$j] : ''; // 非0的数字后面添加单位
        $str = $chs[$int{$i}] . $u . $str;
    }
    //echo $str."|".($k - 2)."<br>";
    $str = rtrim($str, '0');// 去掉末尾的0
    $str = preg_replace("/0+/", "零", $str); // 替换多个连续的0
    if(!isset($exp[$k]))
    {
        $exp[$k] = $exp[$k - 2] . '亿'; // 构建单位
    }
    $u2 = $str != '' ? $exp[$k] : '';
    $res = $str . $u2 . $res;
  }

  // 如果小数部分处理完之后是00，需要处理下
  $dec = rtrim($dec, '0');

  // 小数部分从左向右找
  if(!empty($dec)) {
    $res .= $int_unit;

    // 是否要在整数部分以0结尾的数字后附加0，有的系统有这要求
    if ($is_extra_zero) {
      if (substr($int, -1) === '0') {
        $res.= '零';
      }
    }

    for($i = 0, $cnt = strlen($dec); $i < $cnt; $i++) {
      $u = $dec{$i} > 0 ? $dec_uni[$i] : ''; // 非0的数字后面添加单位
      $res .= $chs[$dec{$i}] . $u;
    }
    $res = rtrim($res, '0');// 去掉末尾的0
    $res = preg_replace("/0+/", "零", $res); // 替换多个连续的0
  }
  else {
    $res .= $int_unit . '整';
  }
  return $res;
}